ok I want to make strongly typed Interfaces, models, and migration with mongoose and migrate all collections to database, all names of keys should follow camelCase
Zone [_id {Object_ID, Unique, Primary Key}, name {string}, address {string, optional, long}, latitude {string, optional}, longitude {string, optional}, Routes[] {array of Route Model object}, images[] {array of Image Model object}, slots[] {array of Slot Model object}, contact_name {string, optional}, contact_no {string, optional}, is_active {boolean}, created_by {User Model Object_id}, updated_by {User Model Object_id}, created_at {datetime timestamp}, updated_at {datetime timestamp} ] , 
Slot [_id {Object_ID, Unique, Primary Key}, zone_id {Object_ID, Relation with zone}, slot_number {string}, slot_detail {string, long, optional}, images[] {array of Image Model object}, is_active {boolean}, created_by {User Model Object_id}, updated_by {User Model Object_id}, created_at {datetime timestamp}, updated_at {datetime timestamp}], 
Allotment [_id {Object_ID, Unique, Primary Key}, slot_id {Object_ID, relation with slot}, zone_id {Object_ID, relation with zone}, guest_name {string,optional}, guest_contact_no {string, optional}, guest_detail {string, long, optional}, driver_name {string, optional}, driver_contact_no {string, optional}, is_owner_driver {boolean}, allotment_from {datetime timestamp}, allotment_to {datetime timestamp}, qr_string {string, unique}, created_by {User Model Object_id}, updated_by {User Model Object_id}, created_at {datetime timestamp}, updated_at {datetime timestamp}], 
Log [_id {Object_ID, Unique, Primary Key}, detail {string, long, optional}, changes {string, long, optional}, action_type {string}, collection_name {string}, object_id {string, optional}, created_by {User Model Object_id}, created_at {datetime timestamp}], 
Image [_id {Object_ID, Unique, Primary Key}, image_url {string}, image_title {string, long, optional}, image_detail {string, long, optional}, model_type {string}, model_id {Object_ID, relation with zone or slot or route }, created_by {User Model Object_id}, created_at {datetime timestamp}], 
Route [_id {Object_ID, Unique, Primary Key}, from_address {string, optional}, to_address {string, optional}, to_zone_id {Object_ID, relation with zone}, description {string, long, optional}, images[] {array of Image Model object}, is_active {boolean}, created_by {User Model Object_id}, updated_by {User Model Object_id}, created_at {datetime timestamp},updated_at {datetime timestamp}]